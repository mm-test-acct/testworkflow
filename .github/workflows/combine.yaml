name: Deploy PR

on:
  workflow_run:
    workflows: ["Validate PR"]
    types:
      - completed
  #pull_request_target:
  #  branches:
  #    - main
  #  paths:
  #    - 'submit.txt'

jobs:
  #check:
  #  name: Check files
  #  outputs:
  #    run_job: ${{ steps.check_files.outputs.run_job }}
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 2
  #        ref: ${{ github.head_ref }}
  #    - name: Check modified files
  #      id: check_files
  #      run: |
  #        echo "========================== list modified files =========================="
  #        git diff --name-only HEAD^ HEAD

  #        echo "===================== check paths of modified files ====================="
  #        git diff --name-only HEAD^ HEAD > files.txt
  #        while IFS= read -r file
  #        do
  #          echo $file
  #          if [[ $file != 'submit.txt' ]]; then
  #            echo "Modifications to this file is not allowed for auto-merge"
  #            echo "::set-output name=run_job::false"
  #            exit 125
  #            break
  #          else
  #            echo "::set-output name=run_job::true"
  #          fi
  #        done < files.txt

  deploy:
    name: Add new items from submit.txt
    #needs: check
    #if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v2

     - uses: actions/download-artifact@v2
         with:
         name: pr
         path: pr

     - name: Display structure of downloaded files
         run: ls -R






    #steps:
    #  - name: Checkout
    #    uses: actions/checkout@v2
    #  #  with:
    #  #    ref: ${{ github.head_ref }}

    #  - name: Set up Python
    #    uses: actions/setup-python@v2
    #    with:
    #      python-version: 3.8
    #  - name: Install dependencies
    #    run: |
    #      python -m pip install --upgrade pip
    #      pip install pytest
    #      if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    #  - name: build new base.txt
    #    run: python ./script.py

    #  - name: test new build with pytest
    #    if: ${{ success() }}
    #    run: |
    #      pytest test.py

    #  - name: Save latest upate
    #    run: |
    #      mkdir -p ./pr
    #      cat base.txt > ./pr/NR
    #  - uses: actions/upload-artifact@v2
    #    with:
    #      name: pr
    #      path: pr/


      #- name: Commit latest build
      #  if: ${{ success() }}
      #  uses: EndBug/add-and-commit@v7
      #  with:
      #    add: '.'
      #    push: origin main
      #- name: Commit latest build
      #  if: ${{ success() }}
      #  uses: stefanzweifel/git-auto-commit-action@v4
      #  with:
      #    push_options: '--force'

      #- name: Automerge successful build
      #  if: ${{ success() }}
      #  uses: alexwilson/enable-github-automerge-action@main
      #  with:
      #    github-token: "${{ secrets.GITHUB_TOKEN }}"

